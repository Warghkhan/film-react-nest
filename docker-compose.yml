services:
  database:
    image: postgres:18
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/test/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - internal

  frontend:
    image: "ghcr.io/warghkhan/film-frontend:latest"
    build:
      context: frontend
    environment:
      VITE_BASE_URL: /
      VITE_API_URL: /api/afisha
      VITE_CDN_URL: /content/afisha
    volumes:
      - frontend_build:/app/dist

  backend:
    image: "ghcr.io/warghkhan/film-backend:latest"
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DEBUG: "*"
      DATABASE_DRIVER: "postgres"
      #DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}"
      DATABASE_URL: 'postgres://database:5432/${POSTGRES_DB}'
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      LOGGER_TYPE: dev
    #ports:
    #  - 3000:3000
    depends_on:
      - database
    networks:
      - internal
  server:
    image: "ghcr.io/warghkhan/film-nginx:latest"
    build:
      context: nginx
    ports:
      - 80:80
    volumes:
      - frontend_build:/var/www
    depends_on:
      - frontend
      - backend
    networks:
      - internal

volumes:
  db_data:
  pgadmin-data:
  frontend_build:

networks:
  internal:
